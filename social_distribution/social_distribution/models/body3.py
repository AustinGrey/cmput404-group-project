# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .friendrequest_author import FriendrequestAuthor  # noqa: F401,E501
from .friendrequest_friend import FriendrequestFriend  # noqa: F401,E501
from social_distribution.social_distribution import util


class Body3(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, query: str=None, author: FriendrequestAuthor=None, friend: FriendrequestFriend=None):  # noqa: E501
        """Body3 - a model defined in Swagger

        :param query: The query of this Body3.  # noqa: E501
        :type query: str
        :param author: The author of this Body3.  # noqa: E501
        :type author: FriendrequestAuthor
        :param friend: The friend of this Body3.  # noqa: E501
        :type friend: FriendrequestFriend
        """
        self.swagger_types = {
            'query': str,
            'author': FriendrequestAuthor,
            'friend': FriendrequestFriend
        }

        self.attribute_map = {
            'query': 'query',
            'author': 'author',
            'friend': 'friend'
        }
        self._query = query
        self._author = author
        self._friend = friend

    @classmethod
    def from_dict(cls, dikt) -> 'Body3':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body_3 of this Body3.  # noqa: E501
        :rtype: Body3
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self) -> str:
        """Gets the query of this Body3.


        :return: The query of this Body3.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query: str):
        """Sets the query of this Body3.


        :param query: The query of this Body3.
        :type query: str
        """

        self._query = query

    @property
    def author(self) -> FriendrequestAuthor:
        """Gets the author of this Body3.


        :return: The author of this Body3.
        :rtype: FriendrequestAuthor
        """
        return self._author

    @author.setter
    def author(self, author: FriendrequestAuthor):
        """Sets the author of this Body3.


        :param author: The author of this Body3.
        :type author: FriendrequestAuthor
        """

        self._author = author

    @property
    def friend(self) -> FriendrequestFriend:
        """Gets the friend of this Body3.


        :return: The friend of this Body3.
        :rtype: FriendrequestFriend
        """
        return self._friend

    @friend.setter
    def friend(self, friend: FriendrequestFriend):
        """Sets the friend of this Body3.


        :param friend: The friend of this Body3.
        :type friend: FriendrequestFriend
        """

        self._friend = friend
